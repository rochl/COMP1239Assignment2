// <auto-generated />
using System;
using Assignment1.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Assignment1.Migrations.Incident
{
    [DbContext(typeof(IncidentContext))]
    [Migration("20210226174521_Incidents")]
    partial class Incidents
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Assignment1.Models.Customer", b =>
                {
                    b.Property<int>("customerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("customerAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customerCity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customerCountry")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customerEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customerFirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customerLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customerPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customerPostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customerState")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("customerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Assignment1.Models.Incident", b =>
                {
                    b.Property<int>("incidentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateClosed")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOpened")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TechniciantechId")
                        .HasColumnType("int");

                    b.Property<int?>("customerId")
                        .HasColumnType("int");

                    b.Property<string>("incidentCustomer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("incidentDes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("incidentProduct")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("incidentTech")
                        .HasColumnType("int");

                    b.Property<string>("incidentTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("productId")
                        .HasColumnType("int");

                    b.HasKey("incidentId");

                    b.HasIndex("TechniciantechId");

                    b.HasIndex("customerId");

                    b.HasIndex("productId");

                    b.ToTable("Incidents");

                    b.HasData(
                        new
                        {
                            incidentId = 1,
                            DateClosed = new DateTime(2021, 2, 26, 12, 45, 20, 958, DateTimeKind.Local).AddTicks(2221),
                            DateOpened = new DateTime(2021, 2, 26, 12, 45, 20, 954, DateTimeKind.Local).AddTicks(6172),
                            incidentCustomer = "",
                            incidentDes = "Des for id 1",
                            incidentProduct = "",
                            incidentTech = 1,
                            incidentTitle = "Could not install 1"
                        },
                        new
                        {
                            incidentId = 2,
                            DateClosed = new DateTime(2021, 2, 26, 12, 45, 20, 958, DateTimeKind.Local).AddTicks(2928),
                            DateOpened = new DateTime(2021, 2, 26, 12, 45, 20, 958, DateTimeKind.Local).AddTicks(2903),
                            incidentCustomer = "",
                            incidentDes = "Des for id 2",
                            incidentProduct = "",
                            incidentTech = 3,
                            incidentTitle = "Error"
                        },
                        new
                        {
                            incidentId = 3,
                            DateClosed = new DateTime(2021, 2, 26, 12, 45, 20, 958, DateTimeKind.Local).AddTicks(2964),
                            DateOpened = new DateTime(2021, 2, 26, 12, 45, 20, 958, DateTimeKind.Local).AddTicks(2955),
                            incidentCustomer = "",
                            incidentDes = "Des for id 3",
                            incidentProduct = "",
                            incidentTech = 2,
                            incidentTitle = "Could not install 3"
                        },
                        new
                        {
                            incidentId = 4,
                            DateClosed = new DateTime(2021, 2, 26, 12, 45, 20, 958, DateTimeKind.Local).AddTicks(2975),
                            DateOpened = new DateTime(2021, 2, 26, 12, 45, 20, 958, DateTimeKind.Local).AddTicks(2970),
                            incidentCustomer = "",
                            incidentDes = "Des for id 4",
                            incidentProduct = "",
                            incidentTech = 1,
                            incidentTitle = "Could not install 4"
                        });
                });

            modelBuilder.Entity("Assignment1.Models.Product", b =>
                {
                    b.Property<int>("productId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<string>("productName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("productPrice")
                        .HasColumnType("float");

                    b.HasKey("productId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Assignment1.Models.Technician", b =>
                {
                    b.Property<int>("techId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("techEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("techName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("techPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("techId");

                    b.ToTable("Technicians");
                });

            modelBuilder.Entity("Assignment1.Models.Incident", b =>
                {
                    b.HasOne("Assignment1.Models.Technician", "Technician")
                        .WithMany()
                        .HasForeignKey("TechniciantechId");

                    b.HasOne("Assignment1.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("customerId");

                    b.HasOne("Assignment1.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("productId");
                });
#pragma warning restore 612, 618
        }
    }
}
